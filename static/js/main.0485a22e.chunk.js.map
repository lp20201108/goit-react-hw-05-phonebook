{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/App.module.css","redux/actions.js","redux/constants.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/App.jsx","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","contact","payload","id","uuidv4","removeContact","changeFilter","ContactForm","state","name","number","handleChange","event","setState","target","value","handleSubmit","preventDefault","oldContactName","props","contacts","find","oldContactNumber","alert","onSubmit","this","className","styles","contactForm","htmlFor","label","type","contactInput","placeholder","onChange","btn","Component","connect","items","dispatch","ContactListItem","handleRemove","contactListItem","onClick","btnRemove","visibleContacts","length","map","uuid","message","filter","inputFilter","App","container","console","log","normalizedFilter","toLowerCase","item","includes","getFilteredContacts","isContactIncludes","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,mCAAmC,gBAAkB,2C,mBCAnFD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,YAAc,8B,mBCA9DD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,QAAU,gC,mBCA5ED,EAAOC,QAAU,CAAC,UAAY,uBAAuB,KAAO,oB,wLCGtDC,EAAaC,YCJC,gBDIyB,SAACC,GAAD,MAAc,CACzDC,QAAQ,aACNC,GAAIC,eACDH,OAIDI,EAAgBL,YCVC,mBDYjBM,EAAeN,YCXE,mB,uBCIjBO,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GACd,EAAKC,SAAL,eAAiBD,EAAME,OAAOL,KAAOG,EAAME,OAAOC,S,EAGpDC,aAAe,SAACJ,GACdA,EAAMK,iBAEN,IAAMC,EAAiB,EAAKC,MAAMC,SAASC,MACzC,SAACpB,GAAD,OAAaA,EAAQQ,OAAS,EAAKD,MAAMC,QAGrCa,EAAmB,EAAKH,MAAMC,SAASC,MAC3C,SAACpB,GAAD,OAAaA,EAAQS,SAAW,EAAKF,MAAME,UAGzCQ,EACFK,MAAM,sDAAD,OAEQL,EAAeT,KAFvB,gBAEmCS,EAAeR,SAG9CY,EACTC,MAAM,uDAAD,OAEID,EAAiBZ,OAFrB,iBAEoCY,EAAiBb,OAGhD,EAAKD,MAAMC,KAGX,EAAKD,MAAME,QAKvB,EAAKS,MAAMK,SAAS,CAClBf,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,SAGrB,EAAKG,SAAS,CACZJ,KAAM,GACNC,OAAQ,MAXRa,MAAM,oCAHNA,MAAM,mC,4CAkBV,WACE,OACE,uBAAMC,SAAUC,KAAKT,aAAcU,UAAWC,IAAOC,YAArD,UACE,wBAAOC,QAAQ,OAAOH,UAAWC,IAAOG,MAAxC,iBAEE,uBACErB,KAAK,OACLsB,KAAK,OACLL,UAAWC,IAAOK,aAClBC,YAAY,cACZC,SAAUT,KAAKd,aACfI,MAAOU,KAAKjB,MAAMC,UAGtB,wBAAOoB,QAAQ,SAASH,UAAWC,IAAOG,MAA1C,mBAEE,uBACErB,KAAK,SACLsB,KAAK,OACLL,UAAWC,IAAOK,aAClBC,YAAY,gBACZC,SAAUT,KAAKd,aACfI,MAAOU,KAAKjB,MAAME,YAItB,wBAAQqB,KAAK,SAASL,UAAWC,IAAOQ,IAAxC,gC,GA9EkBC,aA8FXC,eAJS,SAAC7B,GAAD,MAAY,CAClCY,SAAUZ,EAAMY,SAASkB,UALA,SAACC,GAAD,MAAe,CACxCf,SAAU,SAACvB,GAAD,OAAasC,EAASxC,EAAWE,QAO9BoC,CAA6C9B,G,iBCzE7CiC,EArBS,SAAC,GAAwC,IAAtCrC,EAAqC,EAArCA,GAAIM,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQ+B,EAAmB,EAAnBA,aAGzC,OACI,qBAAIf,UAAWC,IAAOe,gBAAtB,UACI,sBAAMhB,UAAU,cAAhB,SAA+BjB,IAC/B,uBAAMiB,UAAU,gBAAhB,cAAkChB,KACjC,wBAAQiC,QAAS,kBACfF,EAAatC,IACbuB,UAAWC,IAAOiB,UAFpB,wB,iBCiBEP,cAAQ,MAJI,SAACE,GAAD,MAAe,CACxCE,aAAc,SAACtC,GAAD,OAAQoC,EAASlC,EAAcF,QAGhCkC,EAvBM,SAAC,GAAuC,IAArCQ,EAAoC,EAApCA,gBAAiBJ,EAAmB,EAAnBA,aACvC,OAAKI,EAAgBC,OAInB,oBAAIpB,UAAU,eAAd,SACGmB,EAAgBE,KAAI,oBAAG5C,UAAH,MAAQ6C,iBAAR,EAAgBvC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,OAAtB,OACnB,cAAC,EAAD,CAEEP,GAAIA,EACJM,KAAMA,EACNC,OAAQA,EACR+B,aAAcA,GAJTtC,QANJ,mBAAGuB,UAAWC,IAAOsB,QAArB,oC,iBC0BIZ,eARS,SAAC7B,GAAD,MAAY,CAClC0C,OAAQ1C,EAAMY,SAAS8B,WAGE,SAACX,GAAD,MAAe,CACxC5B,aAAc,SAACC,GAAD,OAAW2B,EAASjC,EAAaM,EAAME,OAAOC,YAG/CsB,EA7BA,SAAC,GAA8B,IAA5Ba,EAA2B,EAA3BA,OAAQvC,EAAmB,EAAnBA,aACxB,OACE,wBAAOe,UAAWC,IAAOG,MAAzB,kCAEE,uBACEJ,UAAWC,IAAOwB,YAClB1C,KAAK,SACLsB,KAAK,OACLE,YAAY,iBACZC,SAAUvB,EACVI,MAAOmC,U,iBCTTE,E,4JACJ,WACE,OACE,mCACE,sBAAK1B,UAAWC,IAAO0B,UAAvB,UACE,oBAAI3B,UAAU,iBAAd,uBACA,cAAC,EAAD,IACA,oBAAIA,UAAU,QAAd,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAcmB,gBAAiBpB,KAAKN,MAAMC,oB,GATlCgB,aAkCHC,eAXS,SAAC7B,GAAW,IAAD,EACPA,EAAMY,SAAxB8B,EADyB,EACzBA,OAAQZ,EADiB,EACjBA,MAGhB,OAFAgB,QAAQC,IAAIL,EAAQZ,GAEb,CACLlB,SAZwB,SAACA,EAAU8B,GACrC,IAAMM,EAAmBN,EAAOO,cAChC,OAAOrC,EAAS8B,QAAO,SAACQ,GAAD,OACrBA,EAAKjD,KAAKgD,cAAcE,SAASH,MAOXI,CAAoBtB,EAAOY,GAGjDA,SACAW,oBAAqBvB,EAAMQ,UAIhBT,CAAyBe,G,gECrClCd,EAAQwB,YAAc,IAAD,mBACxB/D,GAAa,SAACS,EAAD,OAAUN,EAAV,EAAUA,QAAV,4BAA4BM,GAA5B,CAAmCN,OADxB,cAExBG,GAAgB,SAACG,EAAD,OAAUN,EAAV,EAAUA,QAAV,OACfM,EAAM0C,QAAO,SAACQ,GAAD,OAAUA,EAAKvD,KAAOD,QAHZ,IAMrBgD,EAASY,YAAc,GAAD,eACzBxD,GAAe,SAACyD,EAAD,YAAM7D,YAGT8D,cAAgB,CAAE1B,QAAOY,WCElCe,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACP9D,SAAU+D,YAAeP,EAAuBQ,IAElDnB,aACAoB,UAAUC,IAGNC,EAAYC,YAAaR,GC/B/BS,IAASC,OACP,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaW,QAAS,KAAMJ,UAAWA,EAAvC,SACE,cAAC,IAAMK,WAAP,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,U,kBCf1BjG,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,aAAe,kCAAkC,IAAM,4B","file":"static/js/main.0485a22e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnRemove\":\"ContactListItem_btnRemove__16Umn\",\"contactListItem\":\"ContactListItem_contactListItem__2yepK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2h4r9\",\"inputFilter\":\"Filter_inputFilter__dkkHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__3M0u8\",\"message\":\"ContactsList_message__3PoEO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__hBUO7\",\"root\":\"App_root__3hRQI\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ADD_CONTACT, REMOVE_CONTACT, FILTER_CONTACT } from \"./constants\";\r\n\r\nconst addContact = createAction(ADD_CONTACT, (contact) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    ...contact,\r\n  },\r\n}));\r\n\r\nconst removeContact = createAction(REMOVE_CONTACT);\r\n\r\nconst changeFilter = createAction(FILTER_CONTACT);\r\n\r\nexport { addContact, removeContact, changeFilter };\r\n\r\n//=======================BEFORE TOOLKIT=======================================\r\n\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n//const addContact = (contact) => ({\r\n//   type: ADD_CONTACT,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     ...contact,\r\n//   },\r\n// });\r\n\r\n// const removeContact = (id) => ({\r\n//   type: REMOVE_CONTACT,\r\n//   payload: id,\r\n// });\r\n\r\n// const changeFilter = (filter) => ({\r\n//   type: FILTER_CONTACT,\r\n//   payload: filter,\r\n// });\r\n","const ADD_CONTACT = \"contacts/add\";\r\nconst REMOVE_CONTACT = \"contacts/remove\";\r\nconst FILTER_CONTACT = \"contacts/filter\";\r\n\r\nexport { ADD_CONTACT, REMOVE_CONTACT, FILTER_CONTACT };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { uuid } from \"uuidv4\";\r\nimport { addContact } from \"../../redux/actions\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const oldContactName = this.props.contacts.find(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    const oldContactNumber = this.props.contacts.find(\r\n      (contact) => contact.number === this.state.number\r\n    );\r\n\r\n    if (oldContactName) {\r\n      alert(\r\n        `This contact NAME already exists\r\n         as Name:${oldContactName.name} Tel:${oldContactName.number}`\r\n      );\r\n      return;\r\n    } else if (oldContactNumber) {\r\n      alert(\r\n        `This contact NUMBER already exists as\r\n         Tel:${oldContactNumber.number} Name:${oldContactNumber.name}`\r\n      );\r\n      return;\r\n    } else if (!this.state.name) {\r\n      alert(\"Please, enter the contact name\");\r\n      return;\r\n    } else if (!this.state.number) {\r\n      alert(\"Please, enter the contact number\");\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label htmlFor=\"name\" className={styles.label}>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            className={styles.contactInput}\r\n            placeholder=\"insert name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"number\" className={styles.label}>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            className={styles.contactInput}\r\n            placeholder=\"insert number\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (contact) => dispatch(addContact(contact)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\n\r\n\r\nconst ContactListItem = ({ id, name, number, handleRemove }) => {\r\n  \r\n  \r\n    return (\r\n        <li className={styles.contactListItem}>\r\n            <span className=\"contactName\">{name}</span> \r\n            <span className=\"contactNumber\"> {number}</span>\r\n             <button onClick={() =>\r\n               handleRemove(id)}\r\n               className={styles.btnRemove}>Delete</button>\r\n      </li>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactListItem;\r\n","import { uuid } from \"uuidv4\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport { removeContact } from \"../../redux/actions\";\r\n\r\nconst ContactsList = ({ visibleContacts, handleRemove }) => {\r\n  if (!visibleContacts.length) {\r\n    return <p className={styles.message}>Phonebook is empty!</p>;\r\n  }\r\n  return (\r\n    <ul className=\"contactsList\">\r\n      {visibleContacts.map(({ id = uuid(), name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          handleRemove={handleRemove}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleRemove: (id) => dispatch(removeContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsList);\r\n\r\nContactsList.propTypes = {\r\n  visibleContacts: PropTypes.array.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/actions\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.inputFilter}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        placeholder=\"search contact\"\r\n        onChange={handleChange}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleChange: (event) => dispatch(changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"./ContactForm\";\nimport ContactsList from \"./ContactsList\";\nimport Filter from \"./Filter/Filter\";\nimport styles from \"./App.module.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <div className={styles.container}>\n          <h1 className=\"titlePhonebook\">Phonebook</h1>\n          <ContactForm />\n          <h2 className=\"title\">Contacts</h2>\n          <Filter />\n          <ContactsList visibleContacts={this.props.contacts} />\n        </div>\n      </>\n    );\n  }\n}\n\nconst getFilteredContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter((item) =>\n    item.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { filter, items } = state.contacts;\n  console.log(filter, items);\n  const visibleContacts = getFilteredContacts(items, filter);\n  return {\n    contacts: visibleContacts,\n    filter,\n    isContactIncludes: !!items.length,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, removeContact, changeFilter } from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [removeContact]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n\r\n//==================BEFORE TOOLKIT============\r\n\r\n// import { combineReducers } from \"redux\";\r\n// import { ADD_CONTACT, FILTER_CONTACT, REMOVE_CONTACT } from \"./constants\";\r\n\r\n// // const initialState = {\r\n// //   contacts: {\r\n// //     items: [],\r\n// //     filter: \"\",\r\n// //   },\r\n// // };\r\n\r\n// // const items = (state = [], { type, payload }) => {\r\n// //   switch (type) {\r\n// //     case ADD_CONTACT:\r\n// //       return [...state, payload];\r\n\r\n// //     case REMOVE_CONTACT:\r\n// //       return state.filter((item) => item.id !== payload);\r\n\r\n// //     default:\r\n// //       return state;\r\n// //   }\r\n// // };\r\n\r\n// // const filter = (state = \"\", { type, payload }) => {\r\n// //   switch (type) {\r\n// //     case FILTER_CONTACT:\r\n// //       return payload;\r\n\r\n// //     default:\r\n// //       return state;\r\n// //   }\r\n// // };\r\n\r\n// // export default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport contactsReducer from \"./reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\n// import { createStore, combineReducers } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// import contactsReducer from \"./reducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2hrQg\",\"label\":\"ContactForm_label__2EGvh\",\"contactInput\":\"ContactForm_contactInput__2dPHh\",\"btn\":\"ContactForm_btn__3W8gq\"};"],"sourceRoot":""}